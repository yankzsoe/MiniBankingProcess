// <auto-generated />
using System;
using Identity.Framework.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Identity.Framework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Identity.Framework.Data.Entities.UserBankAccountEntity", b =>
                {
                    b.Property<int>("BankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankAccountId"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BankAccountId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBankAccount", "dbo");

                    b.HasData(
                        new
                        {
                            BankAccountId = 1,
                            AccountNumber = "1234567890",
                            Currency = "IDR",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Identity.Framework.Data.Entities.UserCredentialEntity", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("UserCredential", "dbo");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "test",
                            UserName = "test"
                        });
                });

            modelBuilder.Entity("Identity.Framework.Data.Entities.UserProfileEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserProfile", "dbo");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Dob = new DateTime(1992, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "fullname test"
                        });
                });

            modelBuilder.Entity("Identity.Framework.Data.Entities.UserBankAccountEntity", b =>
                {
                    b.HasOne("Identity.Framework.Data.Entities.UserCredentialEntity", "UserCredential")
                        .WithMany("UserBankAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserCredential");
                });

            modelBuilder.Entity("Identity.Framework.Data.Entities.UserProfileEntity", b =>
                {
                    b.HasOne("Identity.Framework.Data.Entities.UserCredentialEntity", "UsersEntity")
                        .WithOne("UserProfile")
                        .HasForeignKey("Identity.Framework.Data.Entities.UserProfileEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsersEntity");
                });

            modelBuilder.Entity("Identity.Framework.Data.Entities.UserCredentialEntity", b =>
                {
                    b.Navigation("UserBankAccounts");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
